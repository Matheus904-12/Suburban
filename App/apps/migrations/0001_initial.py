# Generated by Django 5.2.6 on 2025-10-03 00:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Linha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('numero', models.CharField(max_length=10, unique=True)),
                ('cor', models.CharField(choices=[('#2E8B57', 'Esmeralda'), ('#FFD700', 'Diamante'), ('#FF6347', 'Rubi'), ('#4169E1', 'Safira'), ('#DC143C', 'Coral'), ('#9932CC', 'Turquesa'), ('#000080', 'Azul'), ('#FF4500', 'Laranja')], max_length=20)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('ativa', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Linha',
                'verbose_name_plural': 'Linhas',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='Estacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('ordem', models.PositiveIntegerField()),
                ('tem_elevador', models.BooleanField(default=False)),
                ('tem_escada_rolante', models.BooleanField(default=False)),
                ('acessivel', models.BooleanField(default=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('baldeacao', models.ManyToManyField(blank=True, to='apps.estacao')),
                ('linha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estacoes', to='apps.linha')),
            ],
            options={
                'verbose_name': 'Estação',
                'verbose_name_plural': 'Estações',
                'ordering': ['linha', 'ordem'],
                'unique_together': {('linha', 'ordem')},
            },
        ),
        migrations.CreateModel(
            name='CondiciaoClimatica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condicao', models.CharField(choices=[('ensolarado', 'Ensolarado'), ('nublado', 'Nublado'), ('chuvoso', 'Chuvoso'), ('tempestade', 'Tempestade'), ('nevoa', 'Névoa')], max_length=20)),
                ('temperatura', models.FloatField()),
                ('umidade', models.FloatField()),
                ('vento', models.FloatField(default=0.0)),
                ('impacto_operacao', models.BooleanField(default=False)),
                ('atualizada_em', models.DateTimeField(auto_now=True)),
                ('estacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='condicoes_clima', to='apps.estacao')),
            ],
            options={
                'verbose_name': 'Condição Climática',
                'verbose_name_plural': 'Condições Climáticas',
                'ordering': ['-atualizada_em'],
            },
        ),
        migrations.CreateModel(
            name='Manutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('preventiva', 'Preventiva'), ('corretiva', 'Corretiva'), ('emergencial', 'Emergencial')], max_length=20)),
                ('status', models.CharField(choices=[('programada', 'Programada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='programada', max_length=20)),
                ('descricao', models.TextField()),
                ('inicio_programado', models.DateTimeField()),
                ('fim_programado', models.DateTimeField()),
                ('inicio_real', models.DateTimeField(blank=True, null=True)),
                ('fim_real', models.DateTimeField(blank=True, null=True)),
                ('impacto_operacao', models.BooleanField(default=True)),
                ('criada_em', models.DateTimeField(auto_now_add=True)),
                ('estacao_fim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutencoes_fim', to='apps.estacao')),
                ('estacao_inicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutencoes_inicio', to='apps.estacao')),
                ('linha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutencoes', to='apps.linha')),
            ],
            options={
                'verbose_name': 'Manutenção',
                'verbose_name_plural': 'Manutenções',
                'ordering': ['-inicio_programado'],
            },
        ),
        migrations.CreateModel(
            name='NotificacaoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('chegada', 'Chegada de Trem'), ('atraso', 'Atraso'), ('manutencao', 'Manutenção'), ('clima', 'Condição Climática'), ('baldeacao', 'Baldeação'), ('emergencia', 'Emergência')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('lida', models.BooleanField(default=False)),
                ('enviada', models.BooleanField(default=False)),
                ('criada_em', models.DateTimeField(auto_now_add=True)),
                ('estacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.estacao')),
                ('linha', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.linha')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-criada_em'],
            },
        ),
        migrations.CreateModel(
            name='PreferenciasUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificar_chegada', models.BooleanField(default=True)),
                ('notificar_atraso', models.BooleanField(default=True)),
                ('notificar_manutencao', models.BooleanField(default=True)),
                ('notificar_clima', models.BooleanField(default=False)),
                ('token_dispositivo', models.CharField(blank=True, max_length=255)),
                ('estacoes_favoritas', models.ManyToManyField(blank=True, to='apps.estacao')),
                ('linhas_favoritas', models.ManyToManyField(blank=True, to='apps.linha')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferencias', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferência do Usuário',
                'verbose_name_plural': 'Preferências dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='Trem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.CharField(max_length=50, unique=True)),
                ('lotacao', models.CharField(choices=[('baixa', 'Baixa (0-30%)'), ('media', 'Média (30-60%)'), ('alta', 'Alta (60-85%)'), ('superlotado', 'Superlotado (85%+)')], default='baixa', max_length=20)),
                ('status', models.CharField(choices=[('operacional', 'Operacional'), ('em_manutencao', 'Em Manutenção'), ('fora_de_servico', 'Fora de Serviço'), ('atrasado', 'Atrasado')], default='operacional', max_length=20)),
                ('velocidade', models.FloatField(default=0.0)),
                ('direcao', models.CharField(blank=True, max_length=100)),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('latitude_atual', models.FloatField(blank=True, null=True)),
                ('longitude_atual', models.FloatField(blank=True, null=True)),
                ('previsao_chegada', models.DateTimeField(blank=True, null=True)),
                ('estacao_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.estacao')),
                ('linha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trens', to='apps.linha')),
                ('proxima_estacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trens_chegando', to='apps.estacao')),
            ],
            options={
                'verbose_name': 'Trem',
                'verbose_name_plural': 'Trens',
                'ordering': ['linha', 'identificador'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoTrem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chegada', models.DateTimeField()),
                ('partida', models.DateTimeField(blank=True, null=True)),
                ('atrasado', models.BooleanField(default=False)),
                ('tempo_parada', models.DurationField(blank=True, null=True)),
                ('estacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps.estacao')),
                ('trem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='apps.trem')),
            ],
            options={
                'verbose_name': 'Histórico do Trem',
                'verbose_name_plural': 'Históricos dos Trens',
                'ordering': ['-chegada'],
            },
        ),
        migrations.CreateModel(
            name='Rota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ativa', models.BooleanField(default=True)),
                ('criada_em', models.DateTimeField(auto_now_add=True)),
                ('estacao_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas_destino', to='apps.estacao')),
                ('estacao_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas_origem', to='apps.estacao')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rota',
                'verbose_name_plural': 'Rotas',
                'unique_together': {('usuario', 'nome')},
            },
        ),
    ]
